---
- name: download hermes
  get_url:
    url: 'https://github.com/informalsystems/ibc-rs/releases/download/v{{ hermes_version }}/hermes-v{{ hermes_version }}-x86_64-unknown-linux-gnu.tar.gz'
    dest: '/tmp/hermes.tar.gz'
    mode: '0700'

- name: unarchive hermes
  unarchive:
    src: '/tmp/hermes.tar.gz'
    remote_src: yes
    dest: '/tmp'

- name: copy hermes binary
  copy:
    src: '/tmp/hermes'
    dest: '/usr/local/bin/'
    remote_src: true
    owner: root
    group: root
    mode: 755

- name: make hermes dir
  file:
    path: '/home/{{ ansible_user }}/.hermes/'
    owner: '{{ ansible_user }}'
    group: '{{ ansible_user }}'
    state: directory

- name: copy hermes config script
  template:
    src: '{{ target }}.toml.j2'
    dest: '/home/{{ ansible_user }}/.hermes/{{ target }}.toml'
    owner: '{{ ansible_user }}'
    group: '{{ ansible_user }}'
    mode: '0644'

- name: get port prefixes
  uri:
    url: '{{ port_prefix_url }}'
    method: GET
    return_content: true
    status_code: 200
    body_format: json
  register: port_prefixes
  when: port_prefix_url is defined

- name: populate hermes config
  blockinfile:
    dest: '/home/{{ ansible_user }}/.hermes/{{ target }}.toml'
    block: "{{ lookup('template', 'fragments/{{ item.key }}.toml.j2') }}"
    marker: '# {mark}'
    marker_begin: 'Begin block: {{ item.key }}'
    marker_end: 'End block: {{ item.key }}'
  with_dict: '{{ supported_networks }}'

- name: create hermes systemd unit
  become: true
  template:
    src: 'hermes.service.j2'
    dest: '/etc/systemd/system/hermes_{{ target }}.service'
    owner: root
    group: root
    mode: '600'

- name: open hermes telemetry port
  become: true
  ufw:
    rule: allow
    proto: tcp
    port: '{{ telemetry_port }}'

- name: start hermes service
  become: true
  systemd:
    name: 'hermes_{{ target }}'
    state: restarted
    daemon_reload: yes
    enabled: yes
  changed_when: false
